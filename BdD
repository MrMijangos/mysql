CREATE DATABASE IF NOT EXISTS unifix;
USE unifix;


CREATE TABLE USUARIO (
    ID_USUARIO INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE VARCHAR(100) NOT NULL,
    CORREO_INSTITUCIONAL VARCHAR(100) NOT NULL UNIQUE,
    ROL ENUM('Estudiante', 'Profesor', 'Administrativo', 'Administrador') NOT NULL
);


CREATE TABLE PROBLEMA (
    ID_PROBLEMA INT AUTO_INCREMENT PRIMARY KEY,
    TIPO_PROBLEMA VARCHAR(50) NOT NULL, --  verficar si es necesario un cataolog
    NIVEL_GRAVEDAD ENUM('Bajo', 'Medio', 'Alto', 'Cr√≠tico') NOT NULL
    -- verficar si es ncesario tener un catalogo con la descripcion del nivel
);


CREATE TABLE UBICACION (
    ID_UBICACION INT AUTO_INCREMENT PRIMARY KEY,
    EDIFICIO VARCHAR(50) NOT NULL,
    AREA VARCHAR(50) NOT NULL,
    COORDENADAS VARCHAR(50) -- verfificar eltipo datos
);

CREATE TABLE STATUS (
    ID_STATUS INT AUTO_INCREMENT PRIMARY KEY,
    CATEGORIA_STATUS ENUM('Pendiente', 'En proceso', 'Resuelto', 'Rechazado') NOT NULL
 -- verificar si queada abierto
);


CREATE TABLE REPORTE (
    ID_REPORTE INT AUTO_INCREMENT PRIMARY KEY,
    ID_USUARIO INT NOT NULL,
    ID_PROBLEMA INT,
    ID_UBICACION INT,
    ID_STATUS INT,
    FECHA DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    DESCRIPCION TEXT,
    FOTO LONGBLOB,
    FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO),
    FOREIGN KEY (ID_PROBLEMA) REFERENCES PROBLEMA(ID_PROBLEMA),
    FOREIGN KEY (ID_UBICACION) REFERENCES UBICACION(ID_UBICACION),
    FOREIGN KEY (ID_STATUS) REFERENCES STATUS(ID_STATUS)
);

CREATE TABLE HISTORIAL (
    ID_HISTORIAL INT AUTO_INCREMENT PRIMARY KEY,
    ID_REPORTE INT NOT NULL,
    COMENTARIO TEXT,
    FECHA_RESPUESTA DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_REPORTE) REFERENCES REPORTE(ID_REPORTE)
);


CREATE VIEW DATOS_ESTADISTICOS AS
SELECT 
    COUNT(*) AS TOTAL_REPORTES,
    (SELECT COUNT(*) FROM REPORTE WHERE ID_STATUS = 1) AS PENDIENTES,
    (SELECT COUNT(*) FROM REPORTE WHERE ID_STATUS = 2) AS EN_PROCESO,
    (SELECT COUNT(*) FROM REPORTE WHERE ID_STATUS = 3) AS RESUELTOS,
    (SELECT COUNT(*) FROM REPORTE WHERE ID_STATUS = 4) AS RECHAZADOS
FROM REPORTE;
